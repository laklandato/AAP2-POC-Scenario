---
#
# TWGCB-01-008-0068
#

# check step
# 1. check sys command group
- name: initial variables
  set_fact:
    var_status: "{{ (rule_status == commons.check_mode.by_pass) | ternary(commons.check_status.by_pass, '') }}"
    var_result: "{{ (rule_status == commons.check_mode.by_pass) | ternary('N/A', '') }}"

# - debug:
#     msg: "{{ rule_id + ':' + rule_status + ':' + var_status + ':' + var_result }}"

- name: check block
  block:
    - name: check sys command group
      shell: >
        if [[ $(find -L /bin /sbin /usr/bin /usr/sbin /usr/local/bin /usr/local/sbin ! -group root) ]]; then
          find -L /bin /sbin /usr/bin /usr/sbin /usr/local/bin /usr/local/sbin ! -group root | xargs ls -al | awk '{ print $3 " " $4 " " $9}' | while read owner group file; do
            if [[ $file == "/bin/write" || $file == "/usr/bin/write" ]]; then
              if [[ $group != "tty" ]]; then
                ls -al $file
              fi
            else
              ls -al $file
            fi
          done
        fi
      register: result
      ignore_errors: true

    - debug:
        var: result

    - name: parse result - PASS
      set_fact:
        var_status: "{{ commons.check_status.pass }}"
        var_result: |
          PASS => all sys command files owned by group root.
      when: 
        - result is defined
        - result.rc == 0
        - result.stdout | default('', true) | trim == ""
    
    - name: parse result - FAIL
      set_fact:
        var_status: "{{ commons.check_status.fail }}"
        var_result: |
          FAILED => found sys command with group other than root.
          {{ result.stdout }}
      when: 
        - result is defined
        - result.rc == 0
        - result.stdout | default('', true) | trim != ""

    # - debug:
    #     msg: "after in {{ rule_id + ':' + var_status + ':' + var_result }}"

  when:
    - rule_status == commons.check_mode.do_check

# - debug:
#     msg: "after {{ rule_id + ':' + var_status + ':' + var_result }}"

- name: Pass check results to role
  include_role:
    name: util/check/update_result
  vars:
    rule_status: "{{ var_status }}"
    rule_result: "{{ var_result }}"
...