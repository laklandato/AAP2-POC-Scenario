---
#
# TWGCB-01-008-0059
#

# check step
# 1. check /etc/gshadow- file owner
- name: initial variables
  set_fact:
    var_status: "{{ (rule_status == commons.check_mode.by_pass) | ternary(commons.check_status.by_pass, '') }}"
    var_result: "{{ (rule_status == commons.check_mode.by_pass) | ternary('N/A', '') }}"

# - debug:
#     msg: "{{ rule_id + ':' + rule_status + ':' + var_status + ':' + var_result }}"

- name: check block
  block:
    - name: check /etc/gshadow- file owner
      shell: >
        ls -l /etc/gshadow- | awk '{ print $1 " " $3 " " $4}' | while read perm owner group; do

          if [[ $owner != "root" ]]; then  
            echo "FAILED => /etc/gshadow-: owner not root";
          fi

          if [[ $group != "root" && $group != "shadow" ]]; then
            echo "FAILED => /etc/gshadow-: group not root or shadow";
          fi
        done
      register: result
      ignore_errors: true

    - debug:
        var: result

    - name: set output to var
      shell: >
        ls -l /etc/gshadow- | awk '{ print $3 ":" $4 }'
      register: command_output

    - name: parse result - PASS
      set_fact:
        var_status: "{{ commons.check_status.pass }}"
        var_result: |
          PASS => owner/group of /etc/gshadow- is {{ command_output.stdout }}
      when: 
        - result is defined
        - result.rc == 0
        - result.stdout | default('', true) | trim == ""
    
    - name: parse result - FAIL
      set_fact:
        var_status: "{{ commons.check_status.fail }}"
        var_result: |
          {{ result.stdout }}
      when: 
        - result is defined
        - result.rc == 0
        - result.stdout | default('', true) | trim != ""

    # - debug:
    #     msg: "after in {{ rule_id + ':' + var_status + ':' + var_result }}"

  when:
    - rule_status == commons.check_mode.do_check

# - debug:
#     msg: "after {{ rule_id + ':' + var_status + ':' + var_result }}"

- name: Pass check results to role
  include_role:
    name: util/check/update_result
  vars:
    rule_status: "{{ var_status }}"
    rule_result: "{{ var_result }}"
...